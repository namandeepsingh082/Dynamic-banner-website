{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// const Banner = () => {\n//   const [visible, setVisible] = useState(false);\n//   const [description, setDescription] = useState('');\n//   const [timer, setTimer] = useState(0);\n//   const [link, setLink] = useState('');\n//   const [countdown, setCountdown] = useState(timer);\n//   useEffect(() => {\n//     // Fetch banner data from the backend\n//     axios.get('http://localhost:5000/api/banner')\n//       .then(response => {\n//         const { description, timer, link } = response.data;\n//         setDescription(description);\n//         setTimer(timer);\n//         setLink(link);\n//         setCountdown(timer);\n//         setVisible(true);\n//       })\n//       .catch(error => console.error('Error fetching banner data:', error));\n//     // Countdown logic\n//     if (visible) {\n//       const interval = setInterval(() => {\n//         setCountdown(prev => {\n//           if (prev <= 1) {\n//             setVisible(false);\n//             clearInterval(interval);\n//             return 0;\n//           }\n//           return prev - 1;\n//         });\n//       }, 1000);\n//       return () => clearInterval(interval);\n//     }\n//   }, [visible, timer]);\n//   if (!visible) return null;\n//   return (\n//     <div className=\"banner\">\n//       <p>{description}</p>\n//       <p>{countdown} seconds remaining</p>\n//       {link && <a href={link}>Learn more</a>}\n//     </div>\n//   );\n// };\n// export default Banner;\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { Container, Typography, Button, Card, CardContent, CircularProgress } from '@mui/material';\n// const Banner = () => {\n//     const [banner, setBanner] = useState(null);\n//     const [loading, setLoading] = useState(true);\n//     const [error, setError] = useState(null);\n//     const [timeRemaining, setTimeRemaining] = useState(0);\n//     const [isVisible, setIsVisible] = useState(true);\n//     useEffect(() => {\n//         axios.get('http://localhost:5000/api/banner')\n//             .then(response => {\n//                 setBanner(response.data);\n//                 setLoading(false);\n//                 setTimeRemaining(response.data.timer); // Set initial countdown time\n//                 setIsVisible(response.data.visible); // Set initial visibility\n//             })\n//             .catch(error => {\n//                 setError('Error fetching banner data');\n//                 setLoading(false);\n//             });\n//     }, []);\n//     useEffect(() => {\n//         if (timeRemaining > 0) {\n//             const interval = setInterval(() => {\n//                 setTimeRemaining(prevTime => {\n//                     if (prevTime <= 1) {\n//                         clearInterval(interval);\n//                         setIsVisible(false); // Hide banner when timer reaches 0\n//                         return 0;\n//                     }\n//                     return prevTime - 1;\n//                 });\n//             }, 1000);\n//             return () => clearInterval(interval); // Cleanup interval on component unmount\n//         }\n//     }, [timeRemaining]);\n//     if (loading) {\n//         return (\n//             <Container maxWidth=\"sm\" style={{ textAlign: 'center', marginTop: '50px' }}>\n//                 <CircularProgress />\n//                 <Typography variant=\"h6\" style={{ marginTop: '20px' }}>Loading...</Typography>\n//             </Container>\n//         );\n//     }\n//     if (error) {\n//         return (\n//             <Container maxWidth=\"sm\" style={{ textAlign: 'center', marginTop: '50px' }}>\n//                 <Typography variant=\"h6\" color=\"error\">{error}</Typography>\n//             </Container>\n//         );\n//     }\n//     if (!isVisible) {\n//         return null; // Don't render anything if the banner is hidden\n//     }\n//     return (\n//         <Container maxWidth=\"md\" style={{ marginTop: '50px' }}>\n//             <Card variant=\"outlined\">\n//                 <CardContent style={{ textAlign: 'center' }}>\n//                     <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n//                         {banner.description}\n//                     </Typography>\n//                     <Button\n//                         variant=\"contained\"\n//                         color=\"primary\"\n//                         href={banner.link}\n//                         target=\"_blank\"\n//                         rel=\"noopener noreferrer\"\n//                         style={{ marginTop: '20px' }}\n//                     >\n//                         Visit Banner Link\n//                     </Button>\n//                     <Typography variant=\"body1\" style={{ marginTop: '20px' }}>\n//                         {isVisible ? 'Banner is visible' : 'Banner is hidden'}\n//                     </Typography>\n//                     <Typography variant=\"body2\" color=\"textSecondary\" style={{ marginTop: '10px' }}>\n//                         Countdown Timer: {formatTime(timeRemaining)}\n//                     </Typography>\n//                 </CardContent>\n//             </Card>\n//         </Container>\n//     );\n// };\n// // Helper function to format time in MM:SS format\n// const formatTime = (seconds) => {\n//     const minutes = Math.floor(seconds / 60);\n//     const secs = seconds % 60;\n//     return `${minutes}:${secs < 10 ? '0' : ''}${secs}`;\n// };\n// export default Banner;\nimport React,{useState,useEffect}from'react';import axios from'axios';import{Container,Typography,Button,Card,CardContent,CircularProgress}from'@mui/material';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Banner=_ref=>{let{bannerData}=_ref;const[banner,setBanner]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[timeRemaining,setTimeRemaining]=useState(0);const[isVisible,setIsVisible]=useState(true);useEffect(()=>{const fetchBanner=async()=>{try{const response=await axios.get('http://localhost:5000/api/banner');setBanner(response.data);setTimeRemaining(response.data.timer);setIsVisible(response.data.visible);setLoading(false);}catch(err){setError('Error fetching banner data');setLoading(false);}};if(!bannerData){fetchBanner();}else{setBanner(bannerData);setTimeRemaining(bannerData.timer);setIsVisible(bannerData.visible);setLoading(false);}},[bannerData]);useEffect(()=>{if(timeRemaining>0){const interval=setInterval(()=>{setTimeRemaining(prevTime=>{if(prevTime<=1){clearInterval(interval);setIsVisible(false);return 0;}return prevTime-1;});},1000);return()=>clearInterval(interval);}},[timeRemaining]);if(loading){return/*#__PURE__*/_jsxs(Container,{maxWidth:\"sm\",style:{textAlign:'center',marginTop:'50px'},children:[/*#__PURE__*/_jsx(CircularProgress,{}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",style:{marginTop:'20px'},children:\"Loading...\"})]});}if(error){return/*#__PURE__*/_jsx(Container,{maxWidth:\"sm\",style:{textAlign:'center',marginTop:'50px'},children:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",color:\"error\",children:error})});}if(!isVisible){return null;}return/*#__PURE__*/_jsx(Container,{maxWidth:\"md\",style:{marginTop:'50px'},children:/*#__PURE__*/_jsx(Card,{variant:\"outlined\",children:/*#__PURE__*/_jsxs(CardContent,{style:{textAlign:'center'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",component:\"h1\",gutterBottom:true,children:banner.description}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",href:banner.link,target:\"_blank\",rel:\"noopener noreferrer\",style:{marginTop:'20px'},children:\"Visit Banner Link\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",style:{marginTop:'20px'},children:isVisible?'Banner is visible':'Banner is hidden'}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"textSecondary\",style:{marginTop:'10px'},children:[\"Countdown Timer: \",formatTime(timeRemaining)]})]})})});};const formatTime=seconds=>{const minutes=Math.floor(seconds/60);const secs=seconds%60;return`${minutes}:${secs<10?'0':''}${secs}`;};export default Banner;","map":{"version":3,"names":["React","useState","useEffect","axios","Container","Typography","Button","Card","CardContent","CircularProgress","jsx","_jsx","jsxs","_jsxs","Banner","_ref","bannerData","banner","setBanner","loading","setLoading","error","setError","timeRemaining","setTimeRemaining","isVisible","setIsVisible","fetchBanner","response","get","data","timer","visible","err","interval","setInterval","prevTime","clearInterval","maxWidth","style","textAlign","marginTop","children","variant","color","component","gutterBottom","description","href","link","target","rel","formatTime","seconds","minutes","Math","floor","secs"],"sources":["C:/Users/Namandeep Singh/Documents/Project/Dynamic-Banner/app-ui/src/Components/Banner.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const Banner = () => {\r\n//   const [visible, setVisible] = useState(false);\r\n//   const [description, setDescription] = useState('');\r\n//   const [timer, setTimer] = useState(0);\r\n//   const [link, setLink] = useState('');\r\n//   const [countdown, setCountdown] = useState(timer);\r\n\r\n//   useEffect(() => {\r\n//     // Fetch banner data from the backend\r\n//     axios.get('http://localhost:5000/api/banner')\r\n//       .then(response => {\r\n//         const { description, timer, link } = response.data;\r\n//         setDescription(description);\r\n//         setTimer(timer);\r\n//         setLink(link);\r\n//         setCountdown(timer);\r\n//         setVisible(true);\r\n//       })\r\n//       .catch(error => console.error('Error fetching banner data:', error));\r\n\r\n//     // Countdown logic\r\n//     if (visible) {\r\n//       const interval = setInterval(() => {\r\n//         setCountdown(prev => {\r\n//           if (prev <= 1) {\r\n//             setVisible(false);\r\n//             clearInterval(interval);\r\n//             return 0;\r\n//           }\r\n//           return prev - 1;\r\n//         });\r\n//       }, 1000);\r\n//       return () => clearInterval(interval);\r\n//     }\r\n//   }, [visible, timer]);\r\n\r\n//   if (!visible) return null;\r\n\r\n//   return (\r\n//     <div className=\"banner\">\r\n//       <p>{description}</p>\r\n//       <p>{countdown} seconds remaining</p>\r\n//       {link && <a href={link}>Learn more</a>}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Banner;\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import { Container, Typography, Button, Card, CardContent, CircularProgress } from '@mui/material';\r\n\r\n// const Banner = () => {\r\n//     const [banner, setBanner] = useState(null);\r\n//     const [loading, setLoading] = useState(true);\r\n//     const [error, setError] = useState(null);\r\n//     const [timeRemaining, setTimeRemaining] = useState(0);\r\n//     const [isVisible, setIsVisible] = useState(true);\r\n\r\n//     useEffect(() => {\r\n//         axios.get('http://localhost:5000/api/banner')\r\n//             .then(response => {\r\n//                 setBanner(response.data);\r\n//                 setLoading(false);\r\n//                 setTimeRemaining(response.data.timer); // Set initial countdown time\r\n//                 setIsVisible(response.data.visible); // Set initial visibility\r\n//             })\r\n//             .catch(error => {\r\n//                 setError('Error fetching banner data');\r\n//                 setLoading(false);\r\n//             });\r\n//     }, []);\r\n\r\n//     useEffect(() => {\r\n//         if (timeRemaining > 0) {\r\n//             const interval = setInterval(() => {\r\n//                 setTimeRemaining(prevTime => {\r\n//                     if (prevTime <= 1) {\r\n//                         clearInterval(interval);\r\n//                         setIsVisible(false); // Hide banner when timer reaches 0\r\n//                         return 0;\r\n//                     }\r\n//                     return prevTime - 1;\r\n//                 });\r\n//             }, 1000);\r\n\r\n//             return () => clearInterval(interval); // Cleanup interval on component unmount\r\n//         }\r\n//     }, [timeRemaining]);\r\n\r\n//     if (loading) {\r\n//         return (\r\n//             <Container maxWidth=\"sm\" style={{ textAlign: 'center', marginTop: '50px' }}>\r\n//                 <CircularProgress />\r\n//                 <Typography variant=\"h6\" style={{ marginTop: '20px' }}>Loading...</Typography>\r\n//             </Container>\r\n//         );\r\n//     }\r\n\r\n//     if (error) {\r\n//         return (\r\n//             <Container maxWidth=\"sm\" style={{ textAlign: 'center', marginTop: '50px' }}>\r\n//                 <Typography variant=\"h6\" color=\"error\">{error}</Typography>\r\n//             </Container>\r\n//         );\r\n//     }\r\n\r\n//     if (!isVisible) {\r\n//         return null; // Don't render anything if the banner is hidden\r\n//     }\r\n\r\n//     return (\r\n//         <Container maxWidth=\"md\" style={{ marginTop: '50px' }}>\r\n//             <Card variant=\"outlined\">\r\n//                 <CardContent style={{ textAlign: 'center' }}>\r\n//                     <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n//                         {banner.description}\r\n//                     </Typography>\r\n//                     <Button\r\n//                         variant=\"contained\"\r\n//                         color=\"primary\"\r\n//                         href={banner.link}\r\n//                         target=\"_blank\"\r\n//                         rel=\"noopener noreferrer\"\r\n//                         style={{ marginTop: '20px' }}\r\n//                     >\r\n//                         Visit Banner Link\r\n//                     </Button>\r\n//                     <Typography variant=\"body1\" style={{ marginTop: '20px' }}>\r\n//                         {isVisible ? 'Banner is visible' : 'Banner is hidden'}\r\n//                     </Typography>\r\n//                     <Typography variant=\"body2\" color=\"textSecondary\" style={{ marginTop: '10px' }}>\r\n//                         Countdown Timer: {formatTime(timeRemaining)}\r\n//                     </Typography>\r\n//                 </CardContent>\r\n//             </Card>\r\n//         </Container>\r\n//     );\r\n// };\r\n\r\n// // Helper function to format time in MM:SS format\r\n// const formatTime = (seconds) => {\r\n//     const minutes = Math.floor(seconds / 60);\r\n//     const secs = seconds % 60;\r\n//     return `${minutes}:${secs < 10 ? '0' : ''}${secs}`;\r\n// };\r\n\r\n// export default Banner;\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Container, Typography, Button, Card, CardContent, CircularProgress } from '@mui/material';\r\n\r\nconst Banner = ({ bannerData }) => {\r\n    const [banner, setBanner] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [timeRemaining, setTimeRemaining] = useState(0);\r\n    const [isVisible, setIsVisible] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const fetchBanner = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:5000/api/banner');\r\n                setBanner(response.data);\r\n                setTimeRemaining(response.data.timer);\r\n                setIsVisible(response.data.visible);\r\n                setLoading(false);\r\n            } catch (err) {\r\n                setError('Error fetching banner data');\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        if (!bannerData) {\r\n            fetchBanner();\r\n        } else {\r\n            setBanner(bannerData);\r\n            setTimeRemaining(bannerData.timer);\r\n            setIsVisible(bannerData.visible);\r\n            setLoading(false);\r\n        }\r\n    }, [bannerData]);\r\n\r\n    useEffect(() => {\r\n        if (timeRemaining > 0) {\r\n            const interval = setInterval(() => {\r\n                setTimeRemaining(prevTime => {\r\n                    if (prevTime <= 1) {\r\n                        clearInterval(interval);\r\n                        setIsVisible(false);\r\n                        return 0;\r\n                    }\r\n                    return prevTime - 1;\r\n                });\r\n            }, 1000);\r\n\r\n            return () => clearInterval(interval);\r\n        }\r\n    }, [timeRemaining]);\r\n\r\n    if (loading) {\r\n        return (\r\n            <Container maxWidth=\"sm\" style={{ textAlign: 'center', marginTop: '50px' }}>\r\n                <CircularProgress />\r\n                <Typography variant=\"h6\" style={{ marginTop: '20px' }}>Loading...</Typography>\r\n            </Container>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <Container maxWidth=\"sm\" style={{ textAlign: 'center', marginTop: '50px' }}>\r\n                <Typography variant=\"h6\" color=\"error\">{error}</Typography>\r\n            </Container>\r\n        );\r\n    }\r\n\r\n    if (!isVisible) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth=\"md\" style={{ marginTop: '50px' }}>\r\n            <Card variant=\"outlined\">\r\n                <CardContent style={{ textAlign: 'center' }}>\r\n                    <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n                        {banner.description}\r\n                    </Typography>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        href={banner.link}\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        style={{ marginTop: '20px' }}\r\n                    >\r\n                        Visit Banner Link\r\n                    </Button>\r\n                    <Typography variant=\"body1\" style={{ marginTop: '20px' }}>\r\n                        {isVisible ? 'Banner is visible' : 'Banner is hidden'}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" style={{ marginTop: '10px' }}>\r\n                        Countdown Timer: {formatTime(timeRemaining)}\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst formatTime = (seconds) => {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${minutes}:${secs < 10 ? '0' : ''}${secs}`;\r\n};\r\n\r\nexport default Banner;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}