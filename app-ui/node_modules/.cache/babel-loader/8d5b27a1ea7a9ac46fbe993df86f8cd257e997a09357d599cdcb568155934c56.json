{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import { TextField, Button, Container, Typography, Checkbox, FormControlLabel } from '@mui/material';\n// const Dashboard = () => {\n//     const [description, setDescription] = useState('');\n//     const [timer, setTimer] = useState(0);\n//     const [link, setLink] = useState('');\n//     const [visible, setVisible] = useState(true);\n//     const [banner, setBanner] = useState(null);\n//     useEffect(() => {\n//         // Fetch the current banner settings\n//         axios.get('http://localhost:5000/api/banner')\n//             .then(response => {\n//                 const { description, timer, link, visible } = response.data;\n//                 setDescription(description);\n//                 setTimer(timer);\n//                 setLink(link);\n//                 setVisible(visible);\n//                 setBanner(response.data);\n//             })\n//             .catch(error => {\n//                 console.error('Error fetching banner data', error);\n//             });\n//     }, []);\n//     // const handleSubmit = (event) => {\n//     //     event.preventDefault();\n//     //     axios.put('http://localhost:5000/api/banner', { description, timer, link, visible })\n//     //         .then(response => {\n//     //             setBanner(response.data); // Update local state with the new banner data\n//     //             alert('Banner settings updated'); // Notify user\n//     //         })\n//     //         .catch(error => {\n//     //             console.error('Error updating banner data', error);\n//     //         });\n//     // };\n//     const handleSubmit = async (event) => {\n//         console.log(\"Button Clicked\");\n//         event.preventDefault();\n//         try {\n//             console.log('Sending PUT request to backend');\n//             const response = await axios.put('http://localhost:5000/api/banner', { description, timer, link, visible });\n//             console.log('Received response:', response.data);\n//             setBanner(response.data); // Update local state with the new banner data\n//             alert('Banner settings updated, Please Refresh'); // Notify user\n//         } catch (error) {\n//             console.error('Error updating banner data', error);\n//         }\n//     };\n//     return (\n//         <Container maxWidth=\"sm\">\n//             <Typography variant=\"h5\" gutterBottom>Update Banner Settings</Typography>\n//             <form onSubmit={handleSubmit} >\n//                 <TextField\n//                     label=\"Description\"\n//                     fullWidth\n//                     value={description}\n//                     onChange={(e) => setDescription(e.target.value)}\n//                     margin=\"normal\"\n//                 />\n//                 <TextField\n//                     label=\"Timer (seconds)\"\n//                     type=\"number\"\n//                     fullWidth\n//                     value={timer}\n//                     onChange={(e) => setTimer(Number(e.target.value))}\n//                     margin=\"normal\"\n//                 />\n//                 <TextField\n//                     label=\"Link\"\n//                     fullWidth\n//                     value={link}\n//                     onChange={(e) => setLink(e.target.value)}\n//                     margin=\"normal\"\n//                 />\n//                 <FormControlLabel\n//                     control={<Checkbox checked={visible} onChange={() => setVisible(!visible)} />}\n//                     label=\"Show Banner\"\n//                 />\n//                 <Button\n//                     variant=\"contained\"\n//                     color=\"primary\"\n//                     type=\"submit\"\n//                     style={{ marginTop: '20px' }}\n//                 >\n//                     Save Settings\n//                 </Button>\n//             </form>\n//         </Container>\n//     );\n// };\n// export default Dashboard;\nimport React,{useEffect,useState}from'react';import axios from'axios';import{TextField,Button,Container,Typography,Checkbox,FormControlLabel}from'@mui/material';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Dashboard=()=>{const[description,setDescription]=useState('');const[timer,setTimer]=useState(0);const[link,setLink]=useState('');const[visible,setVisible]=useState(false);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);useEffect(()=>{// Fetch the current banner settings\nconst fetchBannerSettings=async()=>{try{setLoading(true);const response=await axios.get('http://localhost:5000/api/banner');const{description,timer,link,visible}=response.data;setDescription(description);setTimer(timer);setLink(link);setVisible(visible);}catch(err){console.error('Error fetching banner settings:',err);setError('Failed to load banner settings');}finally{setLoading(false);}};fetchBannerSettings();},[]);const handleSubmit=async event=>{event.preventDefault();setLoading(true);setError(null);try{const response=await axios.put('http://localhost:5000/api/banner',{id:1,// Assuming we are always updating the banner with id 1\ndescription,timer,link,visible});alert('Banner settings updated successfully!');console.log('Banner updated:',response.data);}catch(err){console.error('Error updating banner settings:',err);setError('Failed to update banner settings');}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(Container,{maxWidth:\"sm\",children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",gutterBottom:true,children:\"Update Banner Settings\"}),loading&&/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:\"Loading...\"}),error&&/*#__PURE__*/_jsx(Typography,{variant:\"body1\",color:\"error\",children:error}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(TextField,{label:\"Description\",fullWidth:true,value:description,onChange:e=>setDescription(e.target.value),margin:\"normal\"}),/*#__PURE__*/_jsx(TextField,{label:\"Timer (seconds)\",type:\"number\",fullWidth:true,value:timer,onChange:e=>setTimer(Number(e.target.value)),margin:\"normal\"}),/*#__PURE__*/_jsx(TextField,{label:\"Link\",fullWidth:true,value:link,onChange:e=>setLink(e.target.value),margin:\"normal\"}),/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{checked:visible,onChange:()=>setVisible(!visible)}),label:\"Show Banner\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",type:\"submit\",style:{marginTop:'20px'},disabled:loading,children:\"Save Settings\"})]})]});};export default Dashboard;","map":{"version":3,"names":["React","useEffect","useState","axios","TextField","Button","Container","Typography","Checkbox","FormControlLabel","jsx","_jsx","jsxs","_jsxs","Dashboard","description","setDescription","timer","setTimer","link","setLink","visible","setVisible","loading","setLoading","error","setError","fetchBannerSettings","response","get","data","err","console","handleSubmit","event","preventDefault","put","id","alert","log","maxWidth","children","variant","gutterBottom","color","onSubmit","label","fullWidth","value","onChange","e","target","margin","type","Number","control","checked","style","marginTop","disabled"],"sources":["C:/Users/Namandeep Singh/Documents/Project/Dynamic-Banner/app-ui/src/Components/Dashboard.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import axios from 'axios';\r\n// import { TextField, Button, Container, Typography, Checkbox, FormControlLabel } from '@mui/material';\r\n\r\n// const Dashboard = () => {\r\n//     const [description, setDescription] = useState('');\r\n//     const [timer, setTimer] = useState(0);\r\n//     const [link, setLink] = useState('');\r\n//     const [visible, setVisible] = useState(true);\r\n//     const [banner, setBanner] = useState(null);\r\n\r\n//     useEffect(() => {\r\n//         // Fetch the current banner settings\r\n//         axios.get('http://localhost:5000/api/banner')\r\n//             .then(response => {\r\n//                 const { description, timer, link, visible } = response.data;\r\n//                 setDescription(description);\r\n//                 setTimer(timer);\r\n//                 setLink(link);\r\n//                 setVisible(visible);\r\n//                 setBanner(response.data);\r\n//             })\r\n//             .catch(error => {\r\n//                 console.error('Error fetching banner data', error);\r\n//             });\r\n//     }, []);\r\n\r\n//     // const handleSubmit = (event) => {\r\n//     //     event.preventDefault();\r\n//     //     axios.put('http://localhost:5000/api/banner', { description, timer, link, visible })\r\n//     //         .then(response => {\r\n//     //             setBanner(response.data); // Update local state with the new banner data\r\n//     //             alert('Banner settings updated'); // Notify user\r\n//     //         })\r\n//     //         .catch(error => {\r\n//     //             console.error('Error updating banner data', error);\r\n//     //         });\r\n//     // };\r\n\r\n//     const handleSubmit = async (event) => {\r\n//         console.log(\"Button Clicked\");\r\n//         event.preventDefault();\r\n//         try {\r\n//             console.log('Sending PUT request to backend');\r\n//             const response = await axios.put('http://localhost:5000/api/banner', { description, timer, link, visible });\r\n//             console.log('Received response:', response.data);\r\n//             setBanner(response.data); // Update local state with the new banner data\r\n//             alert('Banner settings updated, Please Refresh'); // Notify user\r\n//         } catch (error) {\r\n//             console.error('Error updating banner data', error);\r\n//         }\r\n//     };\r\n    \r\n//     return (\r\n//         <Container maxWidth=\"sm\">\r\n//             <Typography variant=\"h5\" gutterBottom>Update Banner Settings</Typography>\r\n//             <form onSubmit={handleSubmit} >\r\n//                 <TextField\r\n//                     label=\"Description\"\r\n//                     fullWidth\r\n//                     value={description}\r\n//                     onChange={(e) => setDescription(e.target.value)}\r\n//                     margin=\"normal\"\r\n//                 />\r\n//                 <TextField\r\n//                     label=\"Timer (seconds)\"\r\n//                     type=\"number\"\r\n//                     fullWidth\r\n//                     value={timer}\r\n//                     onChange={(e) => setTimer(Number(e.target.value))}\r\n//                     margin=\"normal\"\r\n//                 />\r\n//                 <TextField\r\n//                     label=\"Link\"\r\n//                     fullWidth\r\n//                     value={link}\r\n//                     onChange={(e) => setLink(e.target.value)}\r\n//                     margin=\"normal\"\r\n//                 />\r\n//                 <FormControlLabel\r\n//                     control={<Checkbox checked={visible} onChange={() => setVisible(!visible)} />}\r\n//                     label=\"Show Banner\"\r\n//                 />\r\n//                 <Button\r\n//                     variant=\"contained\"\r\n//                     color=\"primary\"\r\n//                     type=\"submit\"\r\n//                     style={{ marginTop: '20px' }}\r\n//                 >\r\n//                     Save Settings\r\n//                 </Button>\r\n//             </form>\r\n//         </Container>\r\n//     );\r\n// };\r\n\r\n// export default Dashboard;\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { TextField, Button, Container, Typography, Checkbox, FormControlLabel } from '@mui/material';\r\n\r\nconst Dashboard = () => {\r\n    const [description, setDescription] = useState('');\r\n    const [timer, setTimer] = useState(0);\r\n    const [link, setLink] = useState('');\r\n    const [visible, setVisible] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // Fetch the current banner settings\r\n        const fetchBannerSettings = async () => {\r\n            try {\r\n                setLoading(true);\r\n                const response = await axios.get('http://localhost:5000/api/banner');\r\n                const { description, timer, link, visible } = response.data;\r\n                setDescription(description);\r\n                setTimer(timer);\r\n                setLink(link);\r\n                setVisible(visible);\r\n            } catch (err) {\r\n                console.error('Error fetching banner settings:', err);\r\n                setError('Failed to load banner settings');\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchBannerSettings();\r\n    }, []);\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        setLoading(true);\r\n        setError(null);\r\n\r\n        try {\r\n            const response = await axios.put('http://localhost:5000/api/banner', {\r\n                id: 1, // Assuming we are always updating the banner with id 1\r\n                description,\r\n                timer,\r\n                link,\r\n                visible\r\n            });\r\n            alert('Banner settings updated successfully!');\r\n            console.log('Banner updated:', response.data);\r\n        } catch (err) {\r\n            console.error('Error updating banner settings:', err);\r\n            setError('Failed to update banner settings');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container maxWidth=\"sm\">\r\n            <Typography variant=\"h5\" gutterBottom>Update Banner Settings</Typography>\r\n            {loading && <Typography variant=\"body1\">Loading...</Typography>}\r\n            {error && <Typography variant=\"body1\" color=\"error\">{error}</Typography>}\r\n            <form onSubmit={handleSubmit}>\r\n                <TextField\r\n                    label=\"Description\"\r\n                    fullWidth\r\n                    value={description}\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                    margin=\"normal\"\r\n                />\r\n                <TextField\r\n                    label=\"Timer (seconds)\"\r\n                    type=\"number\"\r\n                    fullWidth\r\n                    value={timer}\r\n                    onChange={(e) => setTimer(Number(e.target.value))}\r\n                    margin=\"normal\"\r\n                />\r\n                <TextField\r\n                    label=\"Link\"\r\n                    fullWidth\r\n                    value={link}\r\n                    onChange={(e) => setLink(e.target.value)}\r\n                    margin=\"normal\"\r\n                />\r\n                <FormControlLabel\r\n                    control={\r\n                        <Checkbox\r\n                            checked={visible}\r\n                            onChange={() => setVisible(!visible)}\r\n                        />\r\n                    }\r\n                    label=\"Show Banner\"\r\n                />\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    style={{ marginTop: '20px' }}\r\n                    disabled={loading}\r\n                >\r\n                    Save Settings\r\n                </Button>\r\n            </form>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}